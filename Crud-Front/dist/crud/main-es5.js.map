{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/produto/components/tabela/tabela.component.ts","webpack:///src/app/produto/components/tabela/tabela.component.html","webpack:///src/app/produto/service/produto.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","TabelaComponent","produtoService","getProdutos","subscribe","produtos","ProdutoService","httpClient","URL","httpOptions","headers","get","pipe","handleError","error","errorMessage","ErrorEvent","message","status","console","log","providedIn","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'crud';\n}\n","<app-produto-tabela></app-produto-tabela>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TabelaComponent } from './produto/components/tabela/tabela.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TabelaComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    NgbModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Produto } from '../../model/produto';\nimport { ProdutoService } from '../../service/produto.service';\n\n@Component({\n  selector: 'app-produto-tabela',\n  templateUrl: './tabela.component.html',\n  styleUrls: ['./tabela.component.css']\n})\nexport class TabelaComponent implements OnInit {\n  produtos: Produto[];\n\n  constructor(private produtoService: ProdutoService) { }\n  ngOnInit(): void {\n   this.getProdutos();\n  }\n  getProdutos() {\n   this.produtoService.getProdutos().subscribe((produtos: Produto[]) =>{\n     this.produtos = produtos;\n   });\n  }\n\n}\n","<table class=\"table table-striped\">\n  <thead>\n  <tr>\n    <th scope=\"col\">Nome</th>\n    <th scope=\"col\">Codigo de Barras</th>\n    <th scope=\"col\">Quantidade</th>\n    <th scope=\"col\">Categoria</th>\n    <th scope=\"col\">Valor</th>\n    <th scope=\"col\">Descrição</th>\n    <th scope=\"col\">Ação</th>\n\n  </tr>\n  </thead>\n  <tbody>\n  <tr *ngFor=\"let produto of produtos\">\n    <td>\n      {{ produto.nome }}\n    </td>\n    <td>{{ produto.codigoBarras}}</td>\n    <td>{{ produto.quantidade}}</td>\n    <td>{{ produto.categoriaNome}}</td>\n    <td>{{ produto.valor}}</td>\n    <td>{{ produto.descricao}}</td>\n    <td>\n      <button style=\"padding: 2px; margin: 3px;\" type=\"button\" class=\"btn btn-primary\">Editar</button>\n      <button style=\"padding: 2px; margin: 3px;\" type=\"button\" class=\"btn btn-danger\">Excluir</button>\n    </td>\n\n  </tr>\n  </tbody>\n</table>\n","import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport { Produto } from '../model/produto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProdutoService {\n\n  URL = 'http://localhost:8080/produtos';\n\n  constructor(private httpClient: HttpClient) { }\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  getProdutos(): Observable<Produto[]> {\n    return this.httpClient.get<Produto[]>(this.URL)\n      .pipe(\n        retry(2),\n        catchError(this.handleError));\n  };\n\n  \n\n  handleError(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    } else {\n      errorMessage = `Código do erro: ${error.status}, ` + `menssagem: ${error.message}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  };\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}